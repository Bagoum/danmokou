!!{ id reimu_bomb_fantasy_seal
!!{ did .reimu_bomb_fantasy_seal
!{ join(a, b)
%a%%b%
!}
!{ idify(name)
$join(%name, $did)
!}
gtr {
	start {
		fi =f p
		$id =f 1
	}
	wait(12)
	##Player fire may be indefinite, but for the purposes of accurate public hoisting binding,
	## we can assume that the number of iterations with results still on screen is <<1024.
	## Thus, even though this p index will eventually wrap around back to 0, the collision doesn't matter.
	tm(1024, _)
	wait-child
	p mod
} fire
	## free fire
	gtr {
		clip(> &fi 0)
		timereset
	} { 
!!{ colors { red yellow green blue }
		sfx mokou-thousandsuns
		_ 0.4 sfx mima-blackhole
		draiko 1.5 4
		gtr {
			delay 3.7s
		} {
			screenclear
			sfx x-boom-2
			draiko 2 3
		}
		async gdlaser2c-red;black/b <> gcr2 12 12 <> {
			circle
			root zero
			p this
		} laser nroffset Lplayer (3.7 - 12f * p) 3 {
			dsfx
			s 1
			stagger 0.24
			dynamic polar 
				* 2 t
				+ (40 * (&lt + &st)) sine(2.1, 15, 3 * &lt - t)
			player(6, 60, 60, oh1-red)
			tint(rgba(1, 1, 1, 2))
			varlength(20, 3 * t)
		}
		pool-control  $idify(p-gglcircle-black/w) tint rgba(1, 1, 1, 0)
		pool-control { { $idify(p-gglcircle-*/w) } $colors } tint rgba(1, 1, 1, 2)
!!{ tOffset 4
		bullet-control persist $idify(p-empty) updatev2 {
			ldelta accdelta
		} < t $tOffset
		bullet-control persist $idify(p-gglcircle-black/w) oncollide _
			gtr {
			} {
				## i don't like this but there isn't a good way to compare a GCX value to a bullet-control pred internal
				savef $idify(temp1) &group 1
				bullet-control persist { { $idify(p-gglcircle-*/w) } $colors } softcull(cwheel-black/b, & (> s&(group, -1) -1) = @($idify(temp1), &.group) 1)
				sfx reimu-fantasyseal-onhit
				draiko 2 2
				sync $idify(gglcircle-*/w) <0.2;:> gsr2c 20 {
					color $colors
					offset angle(rand(0, 360))
				} simple tprot cx 4 {
					player 0 0 null
					scale(lerpt(0, 0.7, 2, 1.2))
				}
			}
		async $idify(gglcircle-*/w) <> gcr {
			root zero
			 p this
			 bindItr(group)
			 preloop
				ldelta =v2 px(0)
			 expose {
				f group
			 }
			 bindLR
			 wait(24)
			 times(6)
			 savef $idify(temp1) &group 0
		} playerguideempty $did p { $join($id, loc) loc $join($id, dir) dir } { } 
			if (< t $tOffset, 
				roffset(
					Lplayer + tp(qrotate(pxy(lerp3(0, 1.2, 2.4, 4, t + &st, 20, 60, 0), lerp(1.8, 4.3, t + &st, 50, 0)), 
																	rx(lerpsmooth(out-sine, 0, 1, t, 0.5, 2.2), 90 + 350 * (t + &st) + 60 * p)))),
				nrvelocity(truerotatelerprate(lerp(0.4, 0.6, t - $tOffset, 400, 30), &ldelta * 1s, LNearestEnemy - loc) * lerp3(0, 0.1, 0.2, 0.4, t - $tOffset, 1, 0.2, 0.8)))

		{
			gsr {
				color black
			} simple dtpoffset $join($id, loc) $join($id, dir) p zero {
				player 2000 2000 null
				scale 4
			}
			gsr2c 4 {
				p add
				color $colors
			} simple dtpoffset $join($id, loc) $join($id, dir) p1
				rotate(0, pxy(sine(1, .3, t / (0.5 + 0.04 * p2) + 1h * p2), cosine(1, .3, t / (0.5p - 0.06 * p2) + 1h * p2 - 2))) {
					player 0 0 null
					scale 1.6
			}
		}
	}
	
	## free cancellation
	noop
	## focus
	gtr {
	} {
		bullet-control persist $idify(p-needle2-purple) oncollide _
			sync glcircle-red/w <> simple tprot cx 4 { player 0 0 null }
		async $idify(needle2-purple) <> gcr2 12 _ <> { 
			sfx x-pc-fire-1 
		} simple tprot py(13 + 3.5 * (&pi // 2)) { player  34 34 oh1-purple }
	}
	## focus cancellation
	noop

///

	async sakura-green/w <> gcr {
		delay(30 * &fi)
		wait(120)
		## See above for justification.
		tm(1024, _)
		p mod
	} playerguideempty .pdebug1 p { pdebug1_loc loc pdebug1_dir dir } { } tprot cy 4 {
		gsr2c 8 {
			bindAngle
		} simple dtpoffset pdebug1_loc pdebug1_dir p
			rx(0.3, 220 * t) {
				player 12 12 oh1-green
				dir(&angle + 220 * t + 90)
			}
	}