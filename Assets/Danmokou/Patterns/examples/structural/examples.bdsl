<#> bdsl1
pattern { }
phase 0
	paction 0
		shift-phase-to 4
	
!!{ allc { black purple teal green orange yellow red pink blue }	
##1. Draw-circular bank:nest circular
phase 0 #{
	paction 0
		position 0 1
		async gem-* <2;:-90> gcr2 19 _ <35> {
			color { */b */ */w }
		} gsr2 16 <20> {
			bank <0.4;:90>
			color $allc
		} s tprot lerpin 0.3 1 cx 3
#}

##2. 2-anti sawblade
phase 0 #{
	paction 0
		position 0 2
		async gem-*/w <0.5;:> gcr2 30 _ <6h> {
			bindLR ##bindLR is simpler to use than pm1 p
			##p this
			color { blue red }
		} gsr2c 30 { } s polar
			* 1.5 t
			* &lr * 8 t
			##* pm1 p * 8 t
#}

##3. Circular Sector-turn/ RT-turn
phase 0 #{
	paction 0
		position 0 2
		async gem-*/b <;:> gir2 250 _ <> { 
			p this
			color { blue red }
		} gcr {
			wt	12 8
			rpp	angle * pm1 p 2.3h
        } gsr2c 24 {
        } s polar
			logsumshiftt -0.8 1.5 * 3 t * -3 t
			logsumshiftt 0.1 1 0 
				logsumshiftt -0.1 2 * 90 t 0
		
		async gem-*/b <;:> gir2 250 0 <> { 
			p this
			color { blue red }
		} gcr {
			wt	12 8
			rpp	angle * pm1 p 2.3h
        } gsr2c 24 {
        } s tprot 
			if < t 1
				cx 2
			if < t 2
				cy 2
			cxy -2 -2
#}


##4. Drop Circular RT-turn
phase 0 #{
	paction 0
		position 0 2
		sync inode <-3;1:> gsr { root zero } summons
			tprot * sign (rangemod 4 t) cxy 1.6 0.5
			async gem-*/b <;:> gir2 250 _ <> { 
				p this
				color $allc
			} gcr {
				wt	12 16
			} gsr2c 24 {
			} s tprot 
				if < t 1
					cx 2
				if < t 2
					cy 2
				cxy -2 -2
#}


##5. Circular Bad-zero U-turn
phase 0 #{
	paction 0
		position 0 2
		async gem-*/b <0.5;:> gir2 150 _ <> { 
			p this
			color { blue red }
		} gcr {
			wt	12 8
			rpp	angle * pm1 p 2.3h
        } gsr2c 24 {
        } s polar
			pivot t 1.5
				sine 3 2 t
				* t -3
			* pm1 p + 90 * -3 t
#}

##6. Gatekeeping with hookshot V-to-H blocks
phase 0 #{
	paction 0
		position 0 2
		async strip-red* <> gir2 0 2 <> {
			p this
			color { /w /b }
		} gir2 80 _ * pm1 p <-10h> {
		}  gcr2 4 8 * pm1 p <1> {
		} gsr2c 16 {
		} s polar
			logsumshiftt -4 1 (* 2 t) 
				logsumshiftt 0.8 2 (* 0 t) (* 1.5 t)
			* pm1 p logsumshiftt -1 1 * 20 t
				logsumshiftt 0.05 2 (* -40 t) * 10 t
#}


##7. Inverted q-circle decomposition
phase 0 #{
	paction 0
		position 0 2
		async strip-red/w <1;:-90> gcr {
			wt		8 10
			saoffset	bo  (+ 70 * 8 t) px * 0.2 t
			p this
        } s tprot cx 1.5
#}


##8. Draw-circular double in-convulsion
phase 0 #{
	paction 0
		position 0 1
		async gcircle-blue* <0.5;:> gcr2 2 120 <0.015;:9> {
			p this
		} gsr2 2 <> {
		    color { /w /b }
			p add
		} s tprot rotate + * -90 p2 * 4.5 p1
			lerpin 0 0.9 cx 2
#}

##9. Circular control:back-split
phase 0 #{
	paction 0
		position 0 1
		sync glcircle-blue/w <> gsr2c 12 {} s tprot lerpout 0.5 1 cx 3
		bullet-control persist glcircle-blue/w sm > t 1.2
			async sakura-** <150> gcr2 8 36 <> {
				color $allc
			} gsr2 2 <60> { 
				color { /w / } 
			} s tprot lerp 0.2 1 t cx 2 cx 4
		bullet-control persist glcircle-blue/w softcull cwheel-blue/w > t 1.2
#}



##10. Wavering 2-anti rotating flowers
phase 0 #{
	paction 0
		position 0 1
		async ellipse-* <> gir2 0 2 <> {
			color { red/w green/b }
			preloop lr =f pm1 t
		} gcr2 12 _ (* &lr <10h>) {
		} gsr2c 5 {
		} s polar
			lssht -2 0.6 (* 3 t)
				lssht 2 1.4 (* -1 t) (* 2 t)
			* &lr lssht -0.2 1 (* 36 ^ t 2) (* -8 t)
#}


##11. Post-convergent horizontal blocks
phase 0 #{
	paction 0
		position 0 1
		## Generalized method (kinda painful, but this is necessary when not strictly homing on player)
		async arrow-** <;0.67:> gcr2 180 _ <5c> {
			colorf $allc t
		} gsr2c 5 {
		} gsr2 20 <> {
			p this
			preloop rv2.rx =f + [&brv2].rx * 0.2 (- p 10)
		} gsr2 2 <> { 
			color { /w / }
			p add
		} s tprot lerpt 0.6 1.3
			py lerpt 0 2 0 -2
			##these if statements are testing modifications for potential mima/seija nons
			* if (true) 1 (lerpt 2 2.4 1 -1) rx
				+ -2 * 0.5 p2
				## 1 is the mock distance to the home target
				## * 0.1 - p1 20 is the X-offset from above
				atan2 (* 1 pm1 p2)  * * 0.2 (- p1 10) if (= p2 1) 1 (lerpt 2.8 3.2 1 -0.6) 
#}

##12 2-backfire regpoly:5 reg2star:5
phase 0 #{
	paction 0
		async ellipse-*/w <1;:> gcrf (lerpt 0 100 16 12) _ (angle sine 180 270 t) {
			sfxif x-fire-burst-2 divby 2 t
		} gsr2c 5 {
		} gsr2 4 <> {
			p this
			color { red blue yellow teal }
		} s tprot rx 3 + -180 * pm1 p / (if = // p 2 0 108 36) 2
#}

##13 2-backfire regpoly:6 reg2star:6
phase 0 #{
	paction 0
		async ellipse-*/w <1;:> gcrf (lerpt 0 100 16 12) _ (angle sine 180 270 t) {
			sfxif x-fire-burst-2 divby 2 t
		} gsr2c 6 {
		} gsr2 4 <> {
			p this
			color { red blue yellow teal }
		} s tprot rx 3 + -180 * pm1 p / (if = // p 2 0 120 60) 2
#}

##14 snake-fire (too sleepy to fgure this out, i'll fill it in another day)
phase 0 #{
	paction 0
		position -1 2
		async arrow-red/w <> gir2 240 _ <> {
		} gir2 0 4 <20> {
			target a Lplayer
			center
		} gcr2 7 8 <1.3> {
			p this
		} s tprot px * 1 + 0.5 softmod 1 (+ / p 8 / t 2)

#}

