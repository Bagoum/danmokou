
function DoPrintFn(x::int) {
	return print(x);
}
macro DoPrintMacro(x) {
	print(x)
}

var sm = pattern({
	boss "simp.kasen"
}, {
phase 0 { } {
	paction 0 {
		shiftphaseto 4
	}
}
//Of the four alternatives, #2 (function call) is the only one that works "incorrectly".
//This is because the function is called once with the value of FrameNumber when the script is compiled,
// and is never called again.
phase 30 { 
	type non "Print Time Directly"
	hp 10000
} {
	paction 0
		gtr {
			wait(60)
			times(inf)
		} print(ETime.FrameNumber)
}
phase 30 { 
	type non "Print Time Using Function Call"
	hp 10000
} {
	paction 0
		gtr {
			wait(60)
			times(inf)
		} DoPrintFn(ETime.FrameNumber)
}
phase 30 { 
	type non "Print Time Using Wrap Function Call"
	hp 10000
} {
	paction 0
		gtr {
			wait(60)
			times(inf)
		} wrap(DoPrintFn(ETime.FrameNumber))
}
phase 30 { 
	type non "Print Time Using Macro"
	hp 10000
} {
	paction 0
		gtr {
			wait(60)
			times(inf)
			//Macros are a find&replace tool, so this case is actually
			// exactly the same as the first case (direct call).
		} DoPrintMacro(ETime.FrameNumber)
}



})
sm;