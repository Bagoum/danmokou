//----------------------
// <auto-generated>
//     Generated by Bagoum's Localization Utilities CSV Analysis.
//     Github project: https://github.com/Bagoum/localization-utils
// </auto-generated>
//----------------------

using System.Collections.Generic;
using BagoumLib.Culture;
using Danmokou.Core;
using static BagoumLib.Culture.LocalizationRendering;

namespace MiniProjects.VN {
public static partial class ScriptLocalization {
	public static partial class PurpleHeartParadox {
		
		public static readonly LString l0 = new LText("Rise and shine! It's a great day to have an incident.")
			{ ID = "l0" };
		
		public static readonly LString l1 = new LText("It's almost 9:00, isn't it? I should head over to the shrine and tell Reimu about the incident I have planned for today.")
			{ ID = "l1" };
		
		public static readonly LString l2 = new LText("I'll make sure to wake her up in the most annoying way possible...")
			{ ID = "l2" };
		
		public static readonly LString l3 = new LText("I can use the icons that will show up at the right side of the screen to move around. The lowest one will take me to the shrine, but I have enough time to visit some other places first.")
			{ ID = "l3" };
		
		public static readonly LString l4 = new LText("Hey, Yukari. Do you need something fixed up? Or do you want to buy some new gadgets?")
			{ ID = "l4" };
		
		public static readonly LString l5 = new LText("Just passing by, though I do need to get some contraptions fixed, so I'll come by sometime tomorrow.")
			{ ID = "l5" };
		
		public static readonly LString l6 = new LText("Alright! See you later, then!")
			{ ID = "l6" };
		
		public static readonly LString l7 = new LText("Ah, the lakewater is so cool in the morning~")
			{ ID = "l7" };
		
		public static readonly LString l8 = new LText("Enjoying the morning chill?")
			{ ID = "l8" };
		
		public static readonly LString l9 = new LText("Yeah! The morning chill is the best part of the day!")
			{ ID = "l9" };
		
		public static readonly LString l10 = new LText("#### (Sub) Kanako at Moriya")
			{ ID = "l10" };
		
		public static readonly LString l11 = new LText("Yukari! I can't wait to watch the incident today!")
			{ ID = "l11" };
		
		public static readonly LString l12 = new LText("It's going to be great~")
			{ ID = "l12" };
		
		public static readonly LString l13 = new LText("Good morning, Yukari. What's up?")
			{ ID = "l13" };
		
		public static readonly LString l14 = new LText("You're already awake? Well, I came here to tell you about--")
			{ ID = "l14" };
		
		public static readonly LString l15 = new LText("Oh, are you here about the incident?")
			{ ID = "l15" };
		
		public static readonly LString l16 = new LText("Uh, yeah, about the incident. How do you already know--")
			{ ID = "l16" };
		
		public static readonly LString l17 = new LText("Don't worry. I already have some plans drawn up. I'm heading over to Moriya Shrine soon to talk to Sanae about cooperating.")
			{ ID = "l17" };
		
		public static readonly LString l18 = new LText("...Really?")
			{ ID = "l18" };
		
		public static readonly LString l19 = new LText("Yeah, I'll be heading out in a few minutes.")
			{ ID = "l19" };
		
		public static readonly LString l20 = new LText("<silent>(...)</silent>")
			{ ID = "l20" };
		
		public static readonly LString l21 = new LText("<silent>(Wait, something's seriously wrong here. Reimu woke up early, is already informed about the incident, is proactively trying to solve the incident, and is cooperating with Moriya Shrine?)</silent>")
			{ ID = "l21" };
		
		public static readonly LString l22 = new LText("<silent>(There must be something nefarious going on behind the scenes.)</silent>")
			{ ID = "l22" };
		
		public static readonly LString l23 = new LText("I see. Good luck, Reimu.")
			{ ID = "l23" };
		
		public static readonly LString l24 = new LText("Thanks.")
			{ ID = "l24" };
		
		public static readonly LString l25 = new LText("<silent>(I should head back home. Kasen should be able to give me some advice.)</silent>")
			{ ID = "l25" };
		
		public static readonly LString l26 = new LText("Good morning, Yukari. Is the incident going well?")
			{ ID = "l26" };
		
		public static readonly LString l27 = new LText("Actually, about the incident. There are some issues.")
			{ ID = "l27" };
		
		public static readonly LString l28 = new LText("Hmm? What's wrong?")
			{ ID = "l28" };
		
		public static readonly LString l29 = new LText("Well... I went to go tell Reimu about the incident, but she was already awake.")
			{ ID = "l29" };
		
		public static readonly LString l30 = new LText("At nine AM?")
			{ ID = "l30" };
		
		public static readonly LString l31 = new LText("Yeah. Isn't that weird? She even already knew about the incident.")
			{ ID = "l31" };
		
		public static readonly LString l32 = new LText("Hmm... I guess that means that someone else woke her up early and told her about it.")
			{ ID = "l32" };
		
		public static readonly LString l33 = new LText("Yeah, but that's not all. Not only did she already know about the incident, she also already had plans drawn up to resolve it!")
			{ ID = "l33" };
		
		public static readonly LString l34 = new LText("Reimu did? That's a bit odd.")
			{ ID = "l34" };
		
		public static readonly LString l35 = new LText("And she said she was going to <i>cooperate</i> with Moriya Shrine to resolve the incident!")
			{ ID = "l35" };
		
		public static readonly LString l36 = new LText("Why would she cooperate with her competitors, of all people...?")
			{ ID = "l36" };
		
		public static readonly LString l37 = new LText("Hmm... it's really all quite unlikely. This said, I do recall something like this happening once before. Several months back, when I took her for hermit training, she became really motivated for a few days after returning. It didn't last long, but it's pretty close to what you've described.")
			{ ID = "l37" };
		
		public static readonly LString l38 = new LText("But you didn't do anything this time, did you?")
			{ ID = "l38" };
		
		public static readonly LString l39 = new LText("No. And other than you and me, I don't know who else could be responsible for such a drastic change.")
			{ ID = "l39" };
		
		public static readonly LString l40 = new LText("Let me propose a solution. What if... I'm dreaming?")
			{ ID = "l40" };
		
		public static readonly LString l41 = new LText("Hmm... well, since <i>I</i> am aware of my own consciousness, <i>you</i> can't be dreaming. Though, admittedly, that runs into the solipsistic objection, doesn't it?")
			{ ID = "l41" };
		
		public static readonly LString l42 = new LText("Yeah. It's impossible for someone else to be conscious in my dream, but at the same time, there's no way for me to truly verify that you're actually an independent conscious being, and not just a figment of my imagination.")
			{ ID = "l42" };
		
		public static readonly LString l43 = new LText("Yukari, can you take a look at the clock on the wall and tell me what time you see?")
			{ ID = "l43" };
		
		public static readonly LString l44 = new LText("It says... 5:17.")
			{ ID = "l44" };
		
		public static readonly LString l45 = new LText("Alright, now look at me...")
			{ ID = "l45" };
		
		public static readonly LString l46 = new LText("and look again at the clock. What time do you see?")
			{ ID = "l46" };
		
		public static readonly LString l47 = new LText("Still 5:17.")
			{ ID = "l47" };
		
		public static readonly LString l48 = new LText("...Well, that's the only trick I know. Dreams tend to have significant internal inconsistency, so if you look at a clock twice, you'll often see completely different times.")
			{ ID = "l48" };
		
		public static readonly LString l49 = new LText("Maybe we should call Doremy over. She might know more.")
			{ ID = "l49" };
		
		public static readonly LString l50 = new LText("Sure. Let me pull her through a gap real quick.")
			{ ID = "l50" };
		
		public static readonly LString l51 = new LText("Four sheep, five sheep, shear sheep, my sheep--")
			{ ID = "l51" };
		
		public static readonly LString l52 = new LText("Oi! When did I get here?! Instant teleportation... Am I dreami--")
			{ ID = "l52" };
		
		public static readonly LString l53 = new LText("I brought you here, Doremy. I need your help.")
			{ ID = "l53" };
		
		public static readonly LString l54 = new LText("Oh, Yukari. Having trouble sleeping again?")
			{ ID = "l54" };
		
		public static readonly LString l55 = new LText("Quite the opposite. I think I might be stuck in a dream right now.")
			{ ID = "l55" };
		
		public static readonly LString l56 = new LText("Of course you're not stuck in a dream right now.")
			{ ID = "l56" };
		
		public static readonly LString l57 = new LText("Oh, really? Was it that simple--")
			{ ID = "l57" };
		
		public static readonly LString l58 = new LText("--is what I would obviously say if I was a figment of your imagination appearing to you in a dream.")
			{ ID = "l58" };
		
		public static readonly LString l59 = new LText("Ah, I see. It's the solipsistic problem all over again, isn't it?")
			{ ID = "l59" };
		
		public static readonly LString l60 = new LText("Yeah, basically, if you're *stuck* in a dream, then that's precisely when you can't trust people telling you you're not dreaming.")
			{ ID = "l60" };
		
		public static readonly LString l60_1 = new LText(" After all, if you're *stuck* in a dream, then those people are dream constructions that will try to keep you stuck there. Even I, the King of Dreams, might be misrepresented within a dream.")
			{ ID = "l60_1" };
		
		public static readonly LString l61 = new LText("...Then what exactly am I supposed to do?")
			{ ID = "l61" };
		
		public static readonly LString l62 = new LText("Let me give you a few solutions.")
			{ ID = "l62" };
		
		public static readonly LString l63 = new LText("First, dreams usually have significant discrepancy with memory. So for example, you know how I wear a red Santa hat? If you one day saw me wearing a yellow Santa hat, and everyone insisted that in fact I had always worn yellow Santa hats, you might be in a dream.")
			{ ID = "l63" };
		
		public static readonly LString l64 = new LText("That also means that dreams involve forgetting things almost immediately after they occur. However, since you won't notice that you've forgotten those things, you won't be able to use that to tell that you're dreaming.")
			{ ID = "l64" };
		
		public static readonly LString l65 = new LText("Second, dreams lack consistency. So you look at a clock and it shows 2:34, and then you look away and look back, and now it says 7:55. That's dream stuff.")
			{ ID = "l65" };
		
		public static readonly LString l66 = new LText("Finally... well, let me just give you the problem first. Let's say Reimu and Marisa are sitting in a room. Reimu puts her gohei under the table and then leaves. Marisa, being a prankster, takes the gohei and puts in inside a drawer. Reimu comes back. Where will Reimu look for the gohei?")
			{ ID = "l66" };
		
		public static readonly LString l67 = new LText("Under the table, normally.")
			{ ID = "l67" };
		
		public static readonly LString l68 = new LText("This is a problem that Outside scientists ask of children to detect whether they understand that other people have different mental states from them.")
			{ ID = "l68" };
		
		public static readonly LString l68_1 = new LText("Very young children will say that Reimu will look in the drawer, because they don't understand that Marisa and Reimu have access to differing knowledge about the state of the world.")
			{ ID = "l68_1" };
		
		public static readonly LString l69 = new LText("A dream is not complex enough to thoroughly simulate other people's mental states. This means that you will often run into situations where people will share knowledge that you have, regardless of whether or not it makes sense for them to have that knowledge.")
			{ ID = "l69" };
		
		public static readonly LString l69_1 = new LText("In other words, you'll see Reimus who look in the drawer first. It won't happen all the time, but it will happen often.")
			{ ID = "l69_1" };
		
		public static readonly LString l70 = new LText("Hmm, that makes a lot of sense. I didn't think of applying that problem to dreams.")
			{ ID = "l70" };
		
		public static readonly LString l71 = new LText("Speaking of which, Doremy, why do you know about what Outside scientists are doing nowadays? That's not information you should have access to, is it?")
			{ ID = "l71" };
		
		public static readonly LString l72 = new LText("...!")
			{ ID = "l72" };
		
		public static readonly LString l73 = new LText("...")
			{ ID = "l73" };
		
		public static readonly LString l74 = new LText("That's because, uh...")
			{ ID = "l74" };
		
		public static readonly LString l75 = new LText("I read it in a book I borrowed from Rinnosuke. Yeah, that's right.")
			{ ID = "l75" };
		
		public static readonly LString l76 = new LText("Hmm...")
			{ ID = "l76" };
		
		public static readonly LString l77 = new LText("Well, that all said, I guess I should go and watch over the incident. If I'm to find any evidence for the dream hypothesis, I'll find it there.")
			{ ID = "l77" };
		
		public static readonly LString l78 = new LText("Good plan. I need to talk with Doremy, so I'll stay here with her.")
			{ ID = "l78" };
		
		public static readonly LString l79 = new LText("Yukari, <b>if you feel stuck at any point, come back here and ask me for help.</b> I should be able to give you advice.")
			{ ID = "l79" };
		
		public static readonly LString l80 = new LText("Alright. I'll be back soon.")
			{ ID = "l80" };
		
		public static readonly LString l81 = new LText("### 3")
			{ ID = "l81" };
		
		public static readonly LString l82 = new LText("#### (Help)")
			{ ID = "l82" };
		
		public static readonly LString l83 = new LText("You mentioned that Reimu was going to Moriya Shrine, right? In that case, why don't you go there as well?")
			{ ID = "l83" };
		
		public static readonly LString l84 = new LText("#### (Doremy)")
			{ ID = "l84" };
		
		public static readonly LString l85 = new LText("I've been stuck in a dream before. Worst part was, since I'm the King of Dreams, I didn't even expect that it was possible for it to happen to me.")
			{ ID = "l85" };
		
		public static readonly LString l86 = new LText("#### (Sub) Reimu at Shrine")
			{ ID = "l86" };
		
		public static readonly LString l87 = new LText("Hmm... Sanae, couldn't we use 3-SAT to solve this problem?")
			{ ID = "l87" };
		
		public static readonly LString l88 = new LText("It's possible, but given the exponential runtime, we wouldn't finish today. If we could reduce the pool of suspects drastically, then we might be able to use it.")
			{ ID = "l88" };
		
		public static readonly LString l89 = new LText("I see... that's too bad.")
			{ ID = "l89" };
		
		public static readonly LString l90 = new LText("Oh, Yukari. Sanae had an issue that I think you could help her resolve. Could you talk to her about it?")
			{ ID = "l90" };
		
		public static readonly LString l91 = new LText("#### (Main) Sanae at Shrine")
			{ ID = "l91" };
		
		public static readonly LString l91_1 = new LText("The first thing we need to do to resolve this incident is find the impostor. But I can't see how we should go about finding them...")
			{ ID = "l91_1" };
		
		public static readonly LString l92 = new LText("Yeah, it's really tough... You know, I think we should just look for everyone who's kinda sus and exterminate them.")
			{ ID = "l92" };
		
		public static readonly LString l93 = new LText("I... don't think that's a good idea.")
			{ ID = "l93" };
		
		public static readonly LString l94 = new LText("You'll have a lot of false positives like that, Reimu. It's not uncommon for people to act unusual. For example, today, you two are cooperating on an incident, despite being competitors. If Marisa were investigating this incident, wouldn't she have to mark both of you down as suspicious?")
			{ ID = "l94" };
		
		public static readonly LString l95 = new LText("Oh, Yukari! Good morning!")
			{ ID = "l95" };
		
		public static readonly LString l96 = new LText("As Yukari says, I think we'd run into a lot of false positives. If we mark people down as suspicious simply because they're acting unusual, we'd mark down a lot of people who are simply doing new things.")
			{ ID = "l96" };
		
		public static readonly LString l97 = new LText("But what about the other way around? Is it possible for there to be a false negative? In other words, is it possible for the impostor to act normally, so we don't suspect them?")
			{ ID = "l97" };
		
		public static readonly LString l98 = new LText("Hmm...")
			{ ID = "l98" };
		
		public static readonly LString l99 = new LText("Isn't an impostor <i>by definition</i> someone who's sus?")
			{ ID = "l99" };
		
		public static readonly LString l100 = new LText("No, an impostor is by definition someone who imposts.")
			{ ID = "l100" };
		
		public static readonly LString l101 = new LText("Sanae, someone who imposts is by definition a tax collector.")
			{ ID = "l101" };
		
		public static readonly LString l102 = new LText("What?! Then why is it called impostor?!")
			{ ID = "l102" };
		
		public static readonly LString l103 = new LText("I think it's cognate with modern \"poser\" through the Old French verb \"poser\". Ah, just in case you can't hear me speak these words, French \"poser\" rhymes with the name Jose, since word-final -er is pronounced like é (e-accent-aigu).")
			{ ID = "l103" };
		
		public static readonly LString l104 = new LText("I see...")
			{ ID = "l104" };
		
		public static readonly LString l105 = new LText("As Reimu suggests, an impostor is someone who poses as someone they're not. If they pose well, they won't be sus. If they pose badly, they will be sus.")
			{ ID = "l105" };
		
		public static readonly LString l106 = new LText("In that case, is there a different way to smoke out an impostor? Instead of examining people's behavior for sussiness, is there some other method we could use?")
			{ ID = "l106" };
		
		public static readonly LString l107 = new LText("Hmm... Yukari, remember that thing you mentioned earlier? The <i>identity of the Misty Lake</i>? I think that could give us a clue as to how to proceed from here.")
			{ ID = "l107" };
		
		public static readonly LString l108 = new LText("What? Did I mention something like that?")
			{ ID = "l108" };
		
		public static readonly LString l109 = new LText("It was kind of off-hand, so maybe you don't remember. But I think it might give us a hint as to how to find the impostor.")
			{ ID = "l109" };
		
		public static readonly LString l110 = new LText("In that case, why don't I go take a look?")
			{ ID = "l110" };
		
		public static readonly LString l111 = new LText("#### (Sub) Sanae at Shrine")
			{ ID = "l111" };
		
		public static readonly LString l112 = new LText("I think we should look into the identity of the Misty Lake...")
			{ ID = "l112" };
		
		public static readonly LString l113 = new LText("### 4")
			{ ID = "l113" };
		
		public static readonly LString l114 = new LText("#### (Help)")
			{ ID = "l114" };
		
		public static readonly LString l115 = new LText("Kasen, do you know about the identity of the Misty Lake?")
			{ ID = "l115" };
		
		public static readonly LString l116 = new LText("No, not at all. But I suppose that if you wanted to look into it, you could visit the Misty Lake.")
			{ ID = "l116" };
		
		public static readonly LString l117 = new LText("#### (Main) Cirno at Misty Lake")
			{ ID = "l117" };
		
		public static readonly LString l118 = new LText("How do you do this fine morning, Yukari?")
			{ ID = "l118" };
		
		public static readonly LString l119 = new LText("A bit under the weather, regrettably. How about you?")
			{ ID = "l119" };
		
		public static readonly LString l120 = new LText("For several hours now do I sit here, pondering the question of what exactly the Misty Lake is. Thy visit brings me hope of a swift resolution to this puzzling matter.")
			{ ID = "l120" };
		
		public static readonly LString l121 = new LText("Huh... well, I suppose I could help. What problem are you trying to solve?")
			{ ID = "l121" };
		
		public static readonly LString l122 = new LText("What exactly is the Misty Lake? And what exactly is <i>not</i> the Misty Lake? That precisely is the matter with which I grapple this fine morning.")
			{ ID = "l122" };
		
		public static readonly LString l123 = new LText("This is the Misty Lake.")
			{ ID = "l123" };
		
		public static readonly LString l124 = new LText("It is as you say, though we must be more precise. If this place were to cease to be misty, would it yet be the Misty Lake?")
			{ ID = "l124" };
		
		public static readonly LString l125 = new LText("Hmm... it's fairly common that descriptive names cease to accurately describe their subject. Outside, there's a place named Sprightwater, derived from \"sprightly\", because it bordered a particularly fast river.")
			{ ID = "l125" };
		
		public static readonly LString l125_1 = new LText("Much later, the river dried up, but the place is still called Sprightwater to this day. I don't think that's unusual.")
			{ ID = "l125_1" };
		
		public static readonly LString l126 = new LText("*Author's note: This is made up. I didn't have time to find a real place like this.")
			{ ID = "l126" };
		
		public static readonly LString l127 = new LText("Yes, a fair assessment. However, consider this. If this place were to cease to be a lake, would it yet be the Misty Lake?")
			{ ID = "l127" };
		
		public static readonly LString l128 = new LText("I... suppose not, actually. If the lake dried up tomorrow, I think we'd call this place \"the place where the Misty Lake used to be\".")
			{ ID = "l128" };
		
		public static readonly LString l129 = new LText("I agree. But let us examine that phrasing. \"The place where the Misty Lake <i>used to be</i>\". If the lake were to dry up, what is it that has disappeared? What, precisely, is it that no longer <i>is</i>? It seems to me that, by the definition of \"dry up\", we must say that the <i>water</i> has disappeared.")
			{ ID = "l129" };
		
		public static readonly LString l130 = new LText("Are you suggesting that that analysis is wrong?")
			{ ID = "l130" };
		
		public static readonly LString l131 = new LText("It cannot be correct. All the water in this lake today will have disappeared within a month, simply by the vagaries of the water cycle. If it is replaced by the rain, then the Misty Lake is preserved. If it is not replaced by the rain, then the Misty Lake ceases to be.")
			{ ID = "l131" };
		
		public static readonly LString l132 = new LText("In other words, what matters is not that the water disappears, but whether or not it is replaced. But the replacement water is not a part of the Misty Lake right now. So the fundamental essence of the Misty Lake is the rainwater of the future...")
			{ ID = "l132" };
		
		public static readonly LString l133 = new LText("See? An absurd result, is it not?")
			{ ID = "l133" };
		
		public static readonly LString l134 = new LText("This is the puzzle with which I find myself afflicted today.")
			{ ID = "l134" };
		
		public static readonly LString l135 = new LText("How can one in good conscience say that the Misty Lake is the Misty Lake because rain will fall from the skies in the future? Is this not an obvious absurdity?")
			{ ID = "l135" };
		
		public static readonly LString l136 = new LText("Actually, I think it makes sense. Consider the stages of the water cycle: rainfall, water collection in lakes and oceans, evaporation, and cloud formation. Other than the few persistent forms of water such as glaciers, all water in this world exists as part of the water cycle.")
			{ ID = "l136" };
		
		public static readonly LString l137 = new LText("To be in the second stage of the water cycle is precisely to be in the general position of receiving rainfall and runoff. So perhaps a lake is a lake precisely because rain will fall in the future.")
			{ ID = "l137" };
		
		public static readonly LString l138 = new LText("While that definition may work generally, it lacks specificity. Consider this counterexample. Let us say that there exists a place where it rains on the first of each month, and this rain is what gives life to the lakes and rivers.")
			{ ID = "l138" };
		
		public static readonly LString l139 = new LText("Now, let us say that on the first day of the fourth month, it does not rain, beginning a drought. As a result, a certain lake dries up at the end of the fourth month. At what point did that lake cease to be a lake?")
			{ ID = "l139" };
		
		public static readonly LString l140 = new LText("Naturally, you'd say that it ceases to become a lake when it dries up, at the end of the fourth month.")
			{ ID = "l140" };
		
		public static readonly LString l141 = new LText("But, per the definition \"a lake is a lake precisely because rain will fall in the future\", it ceases to be a lake on the second day of the third month, which is the point at which rain will no longer fall in the future.")
			{ ID = "l141" };
		
		public static readonly LString l142 = new LText("...How absurd...")
			{ ID = "l142" };
		
		public static readonly LString l143 = new LText("Precisely. I just can't seem to find a good definition. Just what is the identity of the Misty Lake?")
			{ ID = "l143" };
		
		public static readonly LString l144 = new LText("#### (Sub) Cirno at Misty Lake")
			{ ID = "l144" };
		
		public static readonly LString l145 = new LText("Please do inform me anon if you find a proper definition for the Misty Lake.")
			{ ID = "l145" };
		
		public static readonly LString l146 = new LText("### 5")
			{ ID = "l146" };
		
		public static readonly LString l147 = new LText("#### (Help)")
			{ ID = "l147" };
		
		public static readonly LString l148 = new LText("I'm stuck a bit on the matter of the Misty Lake. More specifically, what makes a lake a lake, and when does a lake stop being a lake?")
			{ ID = "l148" };
		
		public static readonly LString l149 = new LText("Hmm... you're right, the problem of how future rainfall defines a present lake is quite thorny. I'm pretty sure the answer is simple, but I can't think of it on the spot.")
			{ ID = "l149" };
		
		public static readonly LString l150 = new LText("Why don't you try asking someone who lives in the water? Maybe look for someone at the ravine?")
			{ ID = "l150" };
		
		public static readonly LString l151 = new LText("#### (Doremy)")
			{ ID = "l151" };
		
		public static readonly LString l152 = new LText("Strangely enough, dreams actually do occur in real-time. If you ask people to move their eyes within a dream at regular intervals, you can measure these actions on an EEG, and it corresponds pretty exactly to doing the same thing in real life.")
			{ ID = "l152" };
		
		public static readonly LString l153 = new LText("#### (Main) Iku at Ravine")
			{ ID = "l153" };
		
		public static readonly LString l154 = new LText("Iku? What are you doing here?")
			{ ID = "l154" };
		
		public static readonly LString l155 = new LText("As I told you earlier today, I live here.")
			{ ID = "l155" };
		
		public static readonly LString l156 = new LText("What? I thought you lived in Heaven.")
			{ ID = "l156" };
		
		public static readonly LString l157 = new LText("Of course not. I'm an oarfish, so obviously I live in water. ")
			{ ID = "l157" };
		
		public static readonly LString l158 = new LText("I see, that makes sense. Anyways, is Nitori here?")
			{ ID = "l158" };
		
		public static readonly LString l159 = new LText("Nee... tory?")
			{ ID = "l159" };
		
		public static readonly LString l160 = new LText("No, I don't think there are any Tories here. You should be able to find some if you go down to Hell, though.")
			{ ID = "l160" };
		
		public static readonly LString l161 = new LText("To get back to the topic, I would say that a lake is a lake because of two factors: its capacity to hold water in a certain configuration, and it actually holding water in that configuration.")
			{ ID = "l161" };
		
		public static readonly LString l162 = new LText("Yeah, but that's the problem, right? Doesn't the water that constitutes the lake today simply evaporate tomorrow?")
			{ ID = "l162" };
		
		public static readonly LString l163 = new LText("You're making a category error. You said \"<i>the</i> water that constitutes <i>the</i> lake\". However, it's actually \"<i>some</i> water that constitutes <i>the</i> lake\". The identity of the water in the lake doesn't matter. Water is just water.")
			{ ID = "l163" };
		
		public static readonly LString l164 = new LText("Wait, it was that simple all along?!")
			{ ID = "l164" };
		
		public static readonly LString l165 = new LText("Yes. Land-dwellers think of water in terms of its different flows, but to sea-dwellers, water only differs by its composition. We could specify that a lake must be filled with <i>fresh</i>water, but beyond that, it's not like water has any particular identity.")
			{ ID = "l165" };
		
		public static readonly LString l166 = new LText("You tried to assign an identity to the water. You tried to distinguish \"the water today\" from \"the water tomorrow\", even though they are the same thing. That is why you failed, land-dweller.")
			{ ID = "l166" };
		
		public static readonly LString l167 = new LText("I see... that makes sense. But does that logic generalize? For example, wouldn't we say that an empty reservoir is still a reservoir? In that respect, isn't the presence of the water not the key here?")
			{ ID = "l167" };
		
		public static readonly LString l168 = new LText("Reservoirs are man-made structures. They are \"intentional\" in that they are built to collect water. I don't believe it's justified to compare them to lakes, which are accidents of nature.")
			{ ID = "l168" };
		
		public static readonly LString l169 = new LText("Then what about rivers? Isn't it said that one never steps in the same river twice, because the flow of the water changes the river?")
			{ ID = "l169" };
		
		public static readonly LString l170 = new LText("Well, that's obviously false. Haven't you, Yukari, stepped in the Sanzu River at least twice? Couldn't you go do that right now? A river is a river because <i>some</i> water flows, not because <i>the</i> water flows. Only a human drunk on the power of formal logic could think otherwise.")
			{ ID = "l170" };
		
		public static readonly LString l171 = new LText("Can we really just cut this knot so easily...?")
			{ ID = "l171" };
		
		public static readonly LString l172 = new LText("Yes. Water is fungible, after all. Stop trying to make non-fungible logical entities out of everything, and your life will be a lot simpler.")
			{ ID = "l172" };
		
		public static readonly LString l173 = new LText("#### (Sub) Iku at Ravine")
			{ ID = "l173" };
		
		public static readonly LString l174 = new LText("Water is water. It's not the specific water that makes a lake, but the presence of water in general.")
			{ ID = "l174" };
		
		public static readonly LString l175 = new LText("If there is water, it's a lake. If there's no water, it's not a lake. Why is that so difficult for a land-dweller to comprehend?")
			{ ID = "l175" };
		
		public static readonly LString l176 = new LText("### 7")
			{ ID = "l176" };
		
		public static readonly LString l177 = new LText("#### (Help)")
			{ ID = "l177" };
		
		public static readonly LString l178 = new LText("I think I've solved the problem of the persistence of water.")
			{ ID = "l178" };
		
		public static readonly LString l179 = new LText("Then you should go discuss it with Cirno to resolve the question of the identity of the Misty Lake.")
			{ ID = "l179" };
		
		public static readonly LString l180 = new LText("#### (Main) Nitori at Misty Lake")
			{ ID = "l180" };
		
		public static readonly LString l181 = new LText("How do you do this fine morning, Yukari?")
			{ ID = "l181" };
		
		public static readonly LString l182 = new LText("A bit under the weather, regrettably. How about you?")
			{ ID = "l182" };
		
		public static readonly LString l183 = new LText("For several hours now do I sit here, pondering the question of what exactly the Misty Lake is. Thy visit brings me hope of a swift resolution to this puzzling matter.")
			{ ID = "l183" };
		
		public static readonly LString l184 = new LText("Oh, yeah, I was also thinking about that. What a coincidence.")
			{ ID = "l184" };
		
		public static readonly LString l185 = new LText("A coincidence indeed. Great minds think alike, as it is said. Have you found a functional solution?")
			{ ID = "l185" };
		
		public static readonly LString l186 = new LText("A lake is simply a basin where <i>some</i> water persistently exists. The identity of the water is irrelevant.")
			{ ID = "l186" };
		
		public static readonly LString l187 = new LText("But does the water that constitutes the Misty Lake today not simply evaporate tomorrow?")
			{ ID = "l187" };
		
		public static readonly LString l188 = new LText("The lake is constituted not by water, but by the presence of water. No matter what water is present, it's still the same lake.")
			{ ID = "l188" };
		
		public static readonly LString l189 = new LText("Oh-hoh... you have cut the Gordian knot in such brilliant fashion.")
			{ ID = "l189" };
		
		public static readonly LString l190 = new LText("To be honest, I can't help but feel like this was a silly game of semantics all along. Shouldn't it have been obvious from the start that a lake is just a place where there's some water?")
			{ ID = "l190" };
		
		public static readonly LString l191 = new LText("[seiga transform-- use an intermediary step here]")
			{ ID = "l191" };
		
		public static readonly LString l192 = new LText("But you like silly games of semantics. That's why you're dreaming of this garbage.")
			{ ID = "l192" };
		
		public static readonly LString l193 = new LText("I guess that is true. If I were to dream of something, I'd like to dream of arguing over the definition of a lake for hours on end.")
			{ ID = "l193" };
		
		public static readonly LString l194 = new LText("Wait, did you just say that I'm dreaming?!")
			{ ID = "l194" };
		
		public static readonly LString l195 = new LText("Yes, but if you are dreaming, then you can't trust my words, since that would then make me an unreliable figment of your imagination. In other words, \"you are dreaming\" is a another variant of the \"I am lying\" paradox.")
			{ ID = "l195" };
		
		public static readonly LString l196 = new LText("Oh, how beautifully pedantic. I never imagined such an absurd formulation.")
			{ ID = "l196" };
		
		public static readonly LString l197 = new LText("But that aside, what are you doing here?")
			{ ID = "l197" };
		
		public static readonly LString l198 = new LText("As I said, I'm here because you're dreaming. Otherwise, wouldn't it be impossible for me to be here?")
			{ ID = "l198" };
		
		public static readonly LString l199 = new LText("No?")
			{ ID = "l199" };
		
		public static readonly LString l200 = new LText("...How strange. Your eyesight must be clouded. How many fingers am I holding up?")
			{ ID = "l200" };
		
		public static readonly LString l201 = new LText("Three.")
			{ ID = "l201" };
		
		public static readonly LString l202 = new LText("No. I'm holding up seven fingers.")
			{ ID = "l202" };
		
		public static readonly LString l203 = new LText("People only have five fingers.")
			{ ID = "l203" };
		
		public static readonly LString l204 = new LText("See, that's the thing. If you're dreaming, basic facts of life like \"how many fingers people have\" get contorted, so it's very common for people in dreams to have six or seven fingers.")
			{ ID = "l204" };
		
		public static readonly LString l205 = new LText("The fact that I'm holding up seven fingers is proof that you're dreaming.")
			{ ID = "l205" };
		
		public static readonly LString l206 = new LText("But you're only holding up three fingers.")
			{ ID = "l206" };
		
		public static readonly LString l207 = new LText("No, that's just because your eyesight is clouded. I can assure you that I'm holding up seven fingers.")
			{ ID = "l207" };
		
		public static readonly LString l208 = new LText(".........")
			{ ID = "l208" };
		
		public static readonly LString l209 = new LText("I swear, kids these days only know how to be bisexual, eat hot chip, and lie...")
			{ ID = "l209" };
		
		public static readonly LString l210 = new LText("Fine, then. I'll give you some harder proof. What time did you go to the Hakurei Shrine this morning?")
			{ ID = "l210" };
		
		public static readonly LString l211 = new LText("Around 9:00.")
			{ ID = "l211" };
		
		public static readonly LString l212 = new LText("And when you got back and talked with Kasen, what time did you see on the clock?")
			{ ID = "l212" };
		
		public static readonly LString l213 = new LText("It was 5:15 or something... oh, shit.")
			{ ID = "l213" };
		
		public static readonly LString l214 = new LText("Okay, now look up at the sky. What time does this brilliant morning sun look like to you?")
			{ ID = "l214" };
		
		public static readonly LString l215 = new LText("Around 11:00.")
			{ ID = "l215" };
		
		public static readonly LString l216 = new LText("You don't find that... suspicious?")
			{ ID = "l216" };
		
		public static readonly LString l217 = new LText(".........")
			{ ID = "l217" };
		
		public static readonly LString l218 = new LText("I guess the clock in my house is running ten hours fast.")
			{ ID = "l218" };
		
		public static readonly LString l219 = new LText("Like hell it is! Go check it right now!")
			{ ID = "l219" };
		
		public static readonly LString l220 = new LText("Alright, be right back.")
			{ ID = "l220" };
		
		public static readonly LString l221 = new LText("It says 3:41.")
			{ ID = "l221" };
		
		public static readonly LString l222 = new LText("You don't find that... suspicious?")
			{ ID = "l222" };
		
		public static readonly LString l223 = new LText("I suppose the clock in my house is running backwards.")
			{ ID = "l223" };
		
		public static readonly LString l224 = new LText("Like hell it is! Go check it again!")
			{ ID = "l224" };
		
		public static readonly LString l225 = new LText("Alright, be right back.")
			{ ID = "l225" };
		
		public static readonly LString l226 = new LText("It says 3:42.")
			{ ID = "l226" };
		
		public static readonly LString l227 = new LText("You don't find that... suspicious?")
			{ ID = "l227" };
		
		public static readonly LString l228 = new LText("I suppose the clock in my house is randomly switching between running backwards and forwards at variable speeds.")
			{ ID = "l228" };
		
		public static readonly LString l229 = new LText("Dear Amitabha Buddha, you're fucking stupid.")
			{ ID = "l229" };
		
		public static readonly LString l230 = new LText("Well, it's not your fault. Common sense doesn't function very well in dreams.")
			{ ID = "l230" };
		
		public static readonly LString l231 = new LText("I understand what you're saying, but a clock randomly running backwards and forwards at variable speeds isn't enough for me to be sure I'm dreaming. I need better proof than that.")
			{ ID = "l231" };
		
		public static readonly LString l232 = new LText("Anyways, I have to go talk to Sanae. I'll be taking my leave now.")
			{ ID = "l232" };
		
		public static readonly LString l233 = new LText("Sanae isn't involved in incident resolution this time. You mean Marisa, right?")
			{ ID = "l233" };
		
		public static readonly LString l234 = new LText("Oh, yeah. Marisa asked me to find out about the identity of the Misty Lake.")
			{ ID = "l234" };
		
		public static readonly LString l235 = new LText("#### (Sub) Seiga at Misty Lake")
			{ ID = "l235" };
		
		public static readonly LString l236 = new LText("If I say that you're dreaming, that would make me a figment of your dream, and therefore you can't trust me.")
			{ ID = "l236" };
		
		public static readonly LString l237 = new LText("If I say that you're not dreaming, you can't trust me since I might be a figment of your dream lying to you.")
			{ ID = "l237" };
		
		public static readonly LString l238 = new LText("Aren't dreams beautiful?")
			{ ID = "l238" };
		
		public static readonly LString l239 = new LText("### 8")
			{ ID = "l239" };
		
		public static readonly LString l240 = new LText("#### (Help)")
			{ ID = "l240" };
		
		public static readonly LString l241 = new LText("Who was it that needed help with the identity of the Misty Lake? It was Marisa, right? You should go back and talk to her.")
			{ ID = "l241" };
		
		public static readonly LString l242 = new LText("That's right. I need to go talk to Marisa.")
			{ ID = "l242" };
		
		public static readonly LString l243 = new LText("#### (Main) Marisa at Moriya Shrine/Forest of Magic")
			{ ID = "l243" };
		
		public static readonly LString l244 = new LText("G'mornin', Yukari. Did ya find anythin' bout the identity of 'e Misty Lake?")
			{ ID = "l244" };
		
		public static readonly LString l245 = new LText("Yes. I'm not exactly sure how it's related, but the Misty Lake is the name we bestow onto a specific water basin when it is filled with water, regardless of the specific identity of that water.")
			{ ID = "l245" };
		
		public static readonly LString l246 = new LText("Oh, how could I have missed that?! Finding the impostor is just like the freshwater-saltwater distinction!")
			{ ID = "l246" };
		
		public static readonly LString l247 = new LText("Now that I recall, Iku did say something about lakes always having freshwater in them...")
			{ ID = "l247" };
		
		public static readonly LString l248 = new LText("Let's say that there's an impostor pretending to be X. The social role of X is like a lake's basin, and it can either be filled by the true person or the impostor.")
			{ ID = "l248" };
		
		public static readonly LString l249 = new LText("In 'is case, the tru' p'rson'd be like freshwa'er, an' the impos'rs like saltwa'r.")
			{ ID = "l249" };
		
		public static readonly LString l250 = new LText("Exactly! And though I can't say if a lake would still be a lake if it were filled with saltwater, I can say that such a happening would be <i>incredibly</i> sus!")
			{ ID = "l250" };
		
		public static readonly LString l251 = new LText("I see. It's a good metaphor for how impostors function in society. But how will you use this to find the impostor?")
			{ ID = "l251" };
		
		public static readonly LString l252 = new LText("Ain't th' ov's? W' g'a l'k a' t' r'n.")
			{ ID = "l252" };
		
		public static readonly LString l253 = new LText("That's right! Let's head over to the ravine, Sanae!")
			{ ID = "l253" };
		
		public static readonly LString l254 = new LText("[sanae transform, background fades to moriya shrine-- use an intermediary step here]")
			{ ID = "l254" };
		
		public static readonly LString l255 = new LText("I think we'll be able to narrow down the list of suspects after going through the ravine. If we're lucky, we'll have enough evidence to pinpoint the culprit immediately.")
			{ ID = "l255" };
		
		public static readonly LString l256 = new LText("Let's go, Reimu.")
			{ ID = "l256" };
		
		public static readonly LString l257 = new LText("Why the ravine...?")
			{ ID = "l257" };
		
		public static readonly LString l258 = new LText("### 9")
			{ ID = "l258" };
		
		public static readonly LString l259 = new LText("#### (Help)")
			{ ID = "l259" };
		
		public static readonly LString l260 = new LText("G O T O T H E R A V I N E")
			{ ID = "l260" };
		
		public static readonly LString l261 = new LText("#### (Doremy)")
			{ ID = "l261" };
		
		public static readonly LString l262 = new LText("Yukari, have you found any proof that you're dreaming?")
			{ ID = "l262" };
		
		public static readonly LString l263 = new LText("None at all. I haven't been able to find anything suspicious.")
			{ ID = "l263" };
		
		public static readonly LString l264 = new LText("Keep looking, then. At this point, I'm pretty sure you're dreaming, to be honest.")
			{ ID = "l264" };
		
		public static readonly LString l265 = new LText("But if I'm dreaming, then that makes you a figment of my imagination, and I can't trust you.")
			{ ID = "l265" };
		
		public static readonly LString l266 = new LText("Exactly. So you have to find the proof yourself.")
			{ ID = "l266" };
		
		public static readonly LString l267 = new LText("#### (Main) Reimu at Ravine")
			{ ID = "l267" };
		
		public static readonly LString l268 = new LText("Reimu? Where's Sanae?")
			{ ID = "l268" };
		
		public static readonly LString l269 = new LText("Sanae? Why would I be working with Sanae? She's a competitor. I work alone on incidents.")
			{ ID = "l269" };
		
		public static readonly LString l270 = new LText("Oh, I must have misremembered.")
			{ ID = "l270" };
		
		public static readonly LString l271 = new LText("Wait, misremembered?! This is exactly what Doremy mentioned earlier. This is proof that I'm dreaming!")
			{ ID = "l271" };
		
		public static readonly LString l272 = new LText("I need to get back and talk to Doremy, right now!")
			{ ID = "l272" };
		
		public static readonly LString l273 = new LText("### 10")
			{ ID = "l273" };
		
		public static readonly LString l274 = new LText("#### (Main) Seiga at Home")
			{ ID = "l274" };
		
		public static readonly LString l275 = new LText("Seiga?! What are you doing here?! Where are Doremy and Kasen?!")
			{ ID = "l275" };
		
		public static readonly LString l276 = new LText("Seiga...? Is that who I've appeared as to you?")
			{ ID = "l276" };
		
		public static readonly LString l277 = new LText("I can't really make out your form at the moment... but yeah, you look more or less like Seiga.")
			{ ID = "l277" };
		
		public static readonly LString l278 = new LText("I see... In that case, are you familiar with the purple heart paradox?")
			{ ID = "l278" };
		
		public static readonly LString l279 = new LText("I... think so. It's a bit hard to recall.")
			{ ID = "l279" };
		
		public static readonly LString l280 = new LText("Of course. For me to name it, you must at least know of it. Let me recount it for you.")
			{ ID = "l280" };
		
		public static readonly LString l281 = new LText("A researcher with a deck of cards pulls out cards one at a time, and asks a subject to name the color and number on each card. Not the suit, but the color.")
			{ ID = "l281" };
		
		public static readonly LString l282 = new LText("At first, all the cards seem to be from a standard playing card deck. A red three of diamonds, a black eight of spades, and so on.")
			{ ID = "l282" };
		
		public static readonly LString l283 = new LText("But then, after going through thirty or forty cards, the researcher pulls out a purple two of hearts.")
			{ ID = "l283" };
		
		public static readonly LString l284 = new LText("When the subject sees the purple two of hearts, they say, \"The color is red, and the number is two\".")
			{ ID = "l284" };
		
		public static readonly LString l285 = new LText("The subject assumes that it is a standard playing card deck, and therefore is unable to perceive cards that are not from a standard playing card deck.")
			{ ID = "l285" };
		
		public static readonly LString l286 = new LText("More formally, when faced with phenomena that do not conform with their worldview, people will simply force them into their worldview, without even noticing the contradiction. This is the purple heart paradox.")
			{ ID = "l286" };
		
		public static readonly LString l287 = new LText("It's not really a paradox, but if I call it a paradox it abbreviates to PHP, and it's just as mind-boggling as PHP, wouldn't you say?")
			{ ID = "l287" };
		
		public static readonly LString l288 = new LText("No, PHP is worse.")
			{ ID = "l288" };
		
		public static readonly LString l289 = new LText("But... are you suggesting that you aren't Seiga, but a \"purple heart\" that I'm perceiving as Seiga?")
			{ ID = "l289" };
		
		public static readonly LString l290 = new LText("Exactly.")
			{ ID = "l290" };
		
		public static readonly LString l291 = new LText("Luckily, it is not particularly difficult to resolve the purple heart paradox. Simply draw attention to the truth, and the scales will fall.")
			{ ID = "l291" };
		
		public static readonly LString l292 = new LText("Look and you shall see! I am...")
			{ ID = "l292" };
		
		public static readonly LString l293 = new LText("you.")
			{ ID = "l293" };
		
		public static readonly LString l294 = new LText("What the... But <i>I'm</i> me...")
			{ ID = "l294" };
		
		public static readonly LString l295 = new LText("Wait! Are you... an impostor?!")
			{ ID = "l295" };
		
		public static readonly LString l296 = new LText("Everyone in this world is an impostor that you yourself have concocted. And every single one of them is a purple heart, a corrupted representation of the flow of the id.")
			{ ID = "l296" };
		
		public static readonly LString l297 = new LText("That, comrade, is the precise nature of dreams.")
			{ ID = "l297" };
		
		public static readonly LString l298 = new LText("On this note, let me ask you something. Who is accompanying Reimu's investigation today?")
			{ ID = "l298" };
		
		public static readonly LString l299 = new LText("It's Sanae... or was it Marisa...? But she said she does investigations alone...")
			{ ID = "l299" };
		
		public static readonly LString l300 = new LText("It's you.")
			{ ID = "l300" };
		
		public static readonly LString l301 = new LText("What?!")
			{ ID = "l301" };
		
		public static readonly LString l302 = new LText("You are the one accompanying Reimu's investigation. However, as you are providing Reimu with more help than you normally do, you dreamed up someone else to take your place by Reimu's side.")
			{ ID = "l302" };
		
		public static readonly LString l303 = new LText("That's bullshit. Why would I do that? That's just nonsensical.")
			{ ID = "l303" };
		
		public static readonly LString l304 = new LText("To Freud, dreaming is a battle in which the id unleashes its desires and the superego attempts to censor these desires.")
			{ ID = "l304" };
		
		public static readonly LString l305 = new LText("You desire, at a fundamental level, to take part in Reimu's investigations. But you also recognize that your duty as the <i>éminence grise</i> of Gensoukyou prevents you from doing so.")
			{ ID = "l305" };
		
		public static readonly LString l306 = new LText("That is why, even as you realize your desire to help Reimu in this dream, your superego will not allow you to stand by her side.")
			{ ID = "l306" };
		
		public static readonly LString l307 = new LText("Agh?!")
			{ ID = "l307" };
		
		public static readonly LString l308 = new LText("Shit. I fucked up.")
			{ ID = "l308" };
		
		public static readonly LString l309 = new LText("Looks like this is it for me. Your superego won't let me stick around any longer.")
			{ ID = "l309" };
		
		public static readonly LString l310 = new LText("Yukari... to end this dream, find the--")
			{ ID = "l310" };
		
		public static readonly LString l311 = new LText("<speed=0.1>AAAAAAAAAAAAGGGHGHH!!!</speed>")
			{ ID = "l311" };
		
		public static readonly LString l312 = new LText("(She's... gone.)")
			{ ID = "l312" };
		
		public static readonly LString l313 = new LText("(...I have no choice. I'll go back and watch over Reimu's investigation.)")
			{ ID = "l313" };
		
		public static readonly LString l314 = new LText("### 11")
			{ ID = "l314" };
		
		public static readonly LString l315 = new LText("#### (Help)")
			{ ID = "l315" };
		
		public static readonly LString l316 = new LText("G O T O T H E R A V I N E")
			{ ID = "l316" };
		
		public static readonly LString l317 = new LText("#### (Doremy)")
			{ ID = "l317" };
		
		public static readonly LString l318 = new LText("D R E A M A N D B E F R E E D")
			{ ID = "l318" };
		
		public static readonly LString l319 = new LText("#### (Main) Reimu at Ravine")
			{ ID = "l319" };
		
		public static readonly LString l320 = new LText("Hey, Reimu. How's the investigation going?")
			{ ID = "l320" };
		
		public static readonly LString l321 = new LText("Oh, Sanae. I found something suspicious. Take a look at this--")
			{ ID = "l321" };
		
		public static readonly LString l322 = new LText("I'm Yukari, not Sanae.")
			{ ID = "l322" };
		
		public static readonly LString l323 = new LText("Oh, sorry, Marisa. I wasn't paying attention. Anyways, take a look at this--")
			{ ID = "l323" };
		
		public static readonly LString l324 = new LText("Huh? I'm Yukari, not Marisa.")
			{ ID = "l324" };
		
		public static readonly LString l325 = new LText("What are you saying? Look at your reflection in the water, you're quite obviously Marisa.")
			{ ID = "l325" };
		
		public static readonly LString l326 = new LText("What the fuck...")
			{ ID = "l326" };
		
		public static readonly LString l327 = new LText("Anyways, Marisa, I found an iron peach here. It means someone from Heaven was around here, probably Tenshi. She's too stupid to be an impostor, but in reverse, that'd make it easy to pretend to be her, so--")
			{ ID = "l327" };
		
		public static readonly LString l328 = new LText("What is this?! What is this?! This can't be right!")
			{ ID = "l328" };
		
		public static readonly LString l329 = new LText("Marisa, are you listening? Marisa, look here--")
			{ ID = "l329" };
		
		public static readonly LString l330 = new LText("No, I won't accept such an absurdity! I am Yukari! I am Yukari, not Marisa!")
			{ ID = "l330" };
		
		public static readonly LString l331 = new LText("<speed=0.1><size=0.4>Marisa</size></speed>")
			{ ID = "l331" };
		
		public static readonly LString l332 = new LText("<speed=0.05><size=0.6>Marisa</size></speed>")
			{ ID = "l332" };
		
		public static readonly LString l333 = new LText("<speed=0.03><size=0.8>Marisa</size></speed>")
			{ ID = "l333" };
		
		public static readonly LString l334 = new LText("<size=0.4>I am Yakumo Yukari, youkai of boundaries, creator of Gensoukyou, the most powerful being in all the three realms!</size>")
			{ ID = "l334" };
		
		public static readonly LString l335 = new LText("<speed=0.15><size=1>M A R I S A</size></speed>")
			{ ID = "l335" };
		
		public static readonly LString l336 = new LText("<speed=0.1><size=1.2>M A R I S A</size></speed>")
			{ ID = "l336" };
		
		public static readonly LString l337 = new LText("<speed=0.06><size=1.4>M A R I S A</size></speed>")
			{ ID = "l337" };
		
		public static readonly LString l338 = new LText("No... I'm not... I'm not...!")
			{ ID = "l338" };
		
		public static readonly LString l339 = new LText("(teleport to lake)")
			{ ID = "l339" };
		
		public static readonly LString l340 = new LText("### 12")
			{ ID = "l340" };
		
		public static readonly LString l341 = new LText("#### (Main) Interact with lake at Misty Lake")
			{ ID = "l341" };
		
		public static readonly LString l342 = new LText("I'm... Yukari.")
			{ ID = "l342" };
		
		public static readonly LString l343 = new LText("Is this what Seiga meant? My own mind won't let me imagine myself directly helping Reimu with her investigation?")
			{ ID = "l343" };
		
		public static readonly LString l344 = new LText("At the least, the basic logic is true. Organizing incidents is my duty as the creator of Gensoukyou. Given that duty, I don't have the right to work with Reimu on incident resolution.")
			{ ID = "l344" };
		
		public static readonly LString l345 = new LText("But, you know... Reimu might as well be my daughter. I'd really like to do incident resolution with her... even just once...")
			{ ID = "l345" };
		
		public static readonly LString l346 = new LText("Me, Kasen, and Reimu doing incident resolution together. Is that too much to ask for?")
			{ ID = "l346" };
		
		public static readonly LString l347 = new LText("At the least, in this dream, it's too much...")
			{ ID = "l347" };
		
		public static readonly LString l348 = new LText("What use is this power of mine if it can't even grant me such simple wishes?")
			{ ID = "l348" };
		
		public static readonly LString l349 = new LText("Ah, what a shame...")
			{ ID = "l349" };
		
		public static readonly LString l350 = new LText("...")
			{ ID = "l350" };
		
		public static readonly LString l351 = new LText("Well, there's not much left to do at this point.")
			{ ID = "l351" };
		
		public static readonly LString l352 = new LText("I know that I'm dreaming now. If I want to, I can probably leave this dream. But...")
			{ ID = "l352" };
		
		public static readonly LString l353 = new LText("I think that I want to work with Reimu on incident resolution, even if I have to call myself Marisa to do so.")
			{ ID = "l353" };
		
		public static readonly LString l354 = new LText("I will... see this dream to the end.")
			{ ID = "l354" };
		
		public static readonly LString l355 = new LText("### 13")
			{ ID = "l355" };
		
		public static readonly LString l356 = new LText("#### (Main) Self-interaction at Ravine")
			{ ID = "l356" };
		
		public static readonly LString l356_1 = new LText("Reimu? Reimu...?")
			{ ID = "l356_1" };
		
		public static readonly LString l357 = new LText("...It seems that Reimu isn't here. The iron peach she mentioned... also isn't here.")
			{ ID = "l357" };
		
		public static readonly LString l358 = new LText("I guess I should look for her. She might even have resolved the incident already...")
			{ ID = "l358" };
		
		public static readonly LString l359 = new LText("Wait for me, Reimu. I won't let you do this alone.")
			{ ID = "l359" };
		
		public static readonly LString l360 = new LText("### 14")
			{ ID = "l360" };
		
		public static readonly LString l361 = new LText("#### (Main) At Home")
			{ ID = "l361" };
		
		public static readonly LString l362 = new LText("Reimu? What are you doing here? Where are Kasen and Doremy?")
			{ ID = "l362" };
		
		public static readonly LString l363 = new LText("Yukari, I've found the culprit behind today's incident.")
			{ ID = "l363" };
		
		public static readonly LString l364 = new LText("Already? Good work, Reimu. Though I was hoping it'd take you a bit longer.")
			{ ID = "l364" };
		
		public static readonly LString l365 = new LText("I'm not talking to you. Stop pretending.")
			{ ID = "l365" };
		
		public static readonly LString l366 = new LText("What? But you just said my name...")
			{ ID = "l366" };
		
		public static readonly LString l367 = new LText("An imitation, be it cornered, must not cease to imitate, lest it lose its very essence.")
			{ ID = "l367" };
		
		public static readonly LString l368 = new LText("What?! Who said that?!")
			{ ID = "l368" };
		
		public static readonly LString l369 = new LText("Good afternoon. This clock says 8:29, but I can assure you it is currently afternoon.")
			{ ID = "l369" };
		
		public static readonly LString l370 = new LText("All said... It seems we have finally reached the endgame.")
			{ ID = "l370" };
		
		public static readonly LString l370_1 = new LText("Seiga? What are you doing here?!")
			{ ID = "l370_1" };
		
		public static readonly LString l371 = new LText("Seiga...?")
			{ ID = "l371" };
		
		public static readonly LString l372 = new LText("Is that who I've appeared as to you?")
			{ ID = "l372" };
		
		public static readonly LString l373 = new LText("Well, if you wish it so, let it be so. It matters no longer. I am arrived to deliver you from suffering, Yukari.")
			{ ID = "l373" };
		
		public static readonly LString l374 = new LText("Come, Reimu. Do you remember what I taught you? Exterminate the impostor among us.")
			{ ID = "l374" };
		
		public static readonly LString l375 = new LText("<speed=0.2>amogus</speed>")
			{ ID = "l375" };
		
		public static readonly LString l376 = new LText("<speed=0.15>amogus</speed>")
			{ ID = "l376" };
		
		public static readonly LString l377 = new LText("<speed=0.1>amogus</speed>")
			{ ID = "l377" };
		
		public static readonly LString l378 = new LText("<speed=0.05>amogus</speed>")
			{ ID = "l378" };
		
		public static readonly LString l379 = new LText("<speed=0.03>amogus</speed>")
			{ ID = "l379" };
		
		public static readonly LString l380 = new LText("### 15")
			{ ID = "l380" };
		
		public static readonly LString l381 = new LText("#### (Main) At Home")
			{ ID = "l381" };
		
		public static readonly LString l382 = new LText("HOYL SHIT!")
			{ ID = "l382" };
		
		public static readonly LString l382_1 = new LText("Dear Amitabha Buddha, what the hell was that?")
			{ ID = "l382_1" };
		
		public static readonly LString l383 = new LText("A nightmare...? That was the worst nightmare I've had in a while...")
			{ ID = "l383" };
		
		public static readonly LString l384 = new LText("Well, no matter. It'll be 9:00 soon, so I should get ready and head out to the shrine. Today's an incident day, so I have to tell Reimu.")
			{ ID = "l384" };
		
		public static readonly LString l385 = new LText("#### (Main) At Shrine")
			{ ID = "l385" };
		
		public static readonly LString l386 = new LText("GOOD MORNING, REIMU~~ IT'S NINE AM, I HOPE YOU'RE AWAKE~~")
			{ ID = "l386" };
		
		public static readonly LString l386_1 = new LText("Blaaaarghgghhghhh.... Give me a minute...")
			{ ID = "l386_1" };
		
		public static readonly LString l387 = new LText("Yukari? Why do you have to wake me up so early?")
			{ ID = "l387" };
		
		public static readonly LString l388 = new LText("Well, you see, there's an incident today!")
			{ ID = "l388" };
		
		public static readonly LString l389 = new LText("Oh. Alright, in that case, I'll go back to sleep and take care of the incident in the afternoon.")
			{ ID = "l389" };
		
		public static readonly LString l390 = new LText("Good night, Yukari.")
			{ ID = "l390" };
		
		public static readonly LString l391 = new LText("...")
			{ ID = "l391" };
		
		public static readonly LString l392 = new LText("<silent>(You desire, at a fundamental level, to take part in Reimu's investigations. But you also recognize that your duty as the <i>éminence grise</i> of Gensoukyou prevents you from doing so.)</silent>")
			{ ID = "l392" };
		
		public static readonly LString l393 = new LText("<silent>(Is this alright...?)</silent>")
			{ ID = "l393" };
		
		public static readonly LString l394 = new LText("<silent>(No, I won't accept it. I am the most powerful being in all the three realms. There is no reason I cannot do what I wish.)</silent>")
			{ ID = "l394" };
		
		public static readonly LString l395 = new LText("That won't do, Reimu. Not today.")
			{ ID = "l395" };
		
		public static readonly LString l396 = new LText("What? Why not?")
			{ ID = "l396" };
		
		public static readonly LString l397 = new LText("Because today, I'll be partnering with you in your investigation.")
			{ ID = "l397" };
		
		public static readonly LString l398 = new LText("You?! Doesn't that defeat the point?!")
			{ ID = "l398" };
		
		public static readonly LString l399 = new LText("Well, I get to decide what the point is, and I decided that the point is one such that my partnering with you doesn't defeat the point. So let's go resolve this incident together, Reimu.")
			{ ID = "l399" };
		
		public static readonly LString l400 = new LText("Fine. If you're going to help me, then put some breakfast together while I get ready.")
			{ ID = "l400" };
		
		public static readonly LString l401 = new LText("Don't forget to brush your teeth, Reimu!")
			{ ID = "l401" };
		
		public static readonly LString l401_1 = new LText("I know that!")
			{ ID = "l401_1" };
		
		public static readonly LString l402 = new LText("Hmm... Marisa, couldn't we use the knapsack algorithm to solve this problem?")
			{ ID = "l402" };
		
		public static readonly LString l403 = new LText("It's possible, but gi'en the exponential runtime, we wou'n't finish today. If we could reduce the pool of suspects drastic'lly, then we maybe could use 't.")
			{ ID = "l403" };
		
		public static readonly LString l404 = new LText("I see... that's too bad.")
			{ ID = "l404" };
		
		public static readonly LString l405 = new LText("Uh... hi there.")
			{ ID = "l405" };
		
		public static readonly LString l406 = new LText("Mima? What are you doing here?")
			{ ID = "l406" };
		
		public static readonly LString l407 = new LText("Nothing suspicious. I'm just doing reconaissance for the incident I'm planning soon. Just reconaissance.")
			{ ID = "l407" };
		
		public static readonly LString l408 = new LText("Alright. Just make sure not to get in the way of today's incident.")
			{ ID = "l408" };
		
		public static readonly LString l409 = new LText("Of course. I would never randomly interrupt someone else's incident. I would never do that. Never. Hahaha...")
			{ ID = "l409" };
		
		public static readonly LString l410 = new LText("ケロケロ")
			{ ID = "l410" };
		
		public static readonly LString l411 = new LText("Hey, do you know what this place is?")
			{ ID = "l411" };
		
		public static readonly LString l412 = new LText("It's the Forest of Magic. If it weren't, I wouldn't be here.")
			{ ID = "l412" };
		
		public static readonly LString l413 = new LText("Oh, I thought it was Moriya Shrine.")
			{ ID = "l413" };
		
		public static readonly LString l414 = new LText("I see... now that you mention it, this certainly is the Moriya Shrine. But then why am I here?")
			{ ID = "l414" };
		
		public static readonly LString l415 = new LText("Why is it a problem for you to be here?")
			{ ID = "l415" };
		
		public static readonly LString l416 = new LText("I assert, logically speaking, that <i>if a location X is the Forest of Magic, then I am present at X.</i> Since this place is not the Forest of Magic, I cannot be here.")
			{ ID = "l416" };
		
		public static readonly LString l417 = new LText("That logic is incorrect. Denying the antecedent is not a valid form of logical reasoning.")
			{ ID = "l417" };
		
		public static readonly LString l418 = new LText("Apologies, I skipped a few steps. I also assert that, given a mutually disjoint set of locations, it is possible for me to be in only one of those places at a time. Do you accept this statement?")
			{ ID = "l418" };
		
		public static readonly LString l419 = new LText("Yeah, I think it's fair to say that one can't be in two locations at the same time.")
			{ ID = "l419" };
		
		public static readonly LString l420 = new LText("Now, consider the set of locations formed of the Forest of Magic, Moriya Shrine, and all other disjoint locations under consideration. Given my logical assertion, I am in the Forest of Magic, and due to the only-one restriction I cannot be here at Moriya Shrine.")
			{ ID = "l420" };
		
		public static readonly LString l421 = new LText("Do you understand now why it is not possible for me to be here?")
			{ ID = "l421" };
		
		public static readonly LString l422 = new LText("Hmm... I think you're hiding an assumption here. How do you know that there exists a location called the Forest of Magic? What if no such location exists, and therefore the set of locations you described is impossible to construct?")
			{ ID = "l422" };
		
		public static readonly LString l423 = new LText("Are you suggesting that the Forest of Magic doesn't exist?")
			{ ID = "l423" };
		
		public static readonly LString l424 = new LText("Perhaps the Forest of Magic is comparable to Atlantis, in that it is an identifiable place that does not exist. We can form sound logical statements of the form <i>if a location X is Atlantis, then false<i>. ")
			{ ID = "l424" };
		
		public static readonly LString l425 = new LText("The specifics of the consequent don't matter if the antecendent is never satisfied.")
			{ ID = "l425" };
		
		public static readonly LString l426 = new LText("Oh, I see. If we deny the existence of the Forest of Magic, then it is possible for me to be here.")
			{ ID = "l426" };
		
		public static readonly LString l427 = new LText("Thanks for the help! I guess that means this is the Moriya Shrine after all.")
			{ ID = "l427" };
		
	}
}
}
